<?php
$wgServer = '{{ SCHEME }}://{{ SERVER_NAME }}{{ PORT }}';

# Developer mode and debugging
error_reporting( -1 );
ini_set( 'display_errors', 1 );
$wgShowExceptionDetails = true;
$wgShowSQLErrors = true;
$wgDebugDumpSql  = true;
$wgShowDBErrorBacktrace = true;

## Database settings
## Environment variables will be substituted in here.
$wgDBserver = "mysql.svc:3306";
$wgDBname = "my_wiki";
$wgDBuser = "wikiuser";
$wgDBpassword = getenv( 'DB_PASS' );

## Logs
## Save these logs inside the container
$wgDebugLogGroups = [
	'resourceloader' => '/var/log/mediawiki/resourceloader.log',
	'exception' => '/var/log/mediawiki/exception.log',
	'error' => '/var/log/mediawiki/error.log',
];

## Site Settings
$wgShellLocale = "en_US.utf8";
$wgLanguageCode = "en";
$wgSitename = "wikibase-{{ PROJECT_NAME }}";
$wgMetaNamespace = "Project";
# Configured web paths & short URLs
# This allows use of the /wiki/* path
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "{{ MW_SCRIPT_PATH }}";
$wgArticlePath = "/wiki/$1";

#Set Secret
$wgSecretKey = "secretkey";

## RC Age
# https://www.mediawiki.org/wiki/Manual:
# Items in the recentchanges table are periodically purged; entries older than this many seconds will go.
# The query service (by default) loads data from recent changes
# Set this to 1 year to avoid any changes being removed from the RC table over a shorter period of time.
$wgRCMaxAge = 365 * 24 * 3600;

wfLoadSkin( 'Vector' );

## Wikibase
# Load Wikibase repo, client & lib with the example / default settings.
require_once "$IP/extensions/Wikibase/lib/WikibaseLib.php";
require_once "$IP/extensions/Wikibase/repo/Wikibase.php";
require_once "$IP/extensions/Wikibase/repo/ExampleSettings.php";
require_once "$IP/extensions/Wikibase/client/WikibaseClient.php";
require_once "$IP/extensions/Wikibase/client/ExampleSettings.php";

# UniversalLanguageSelector
wfLoadExtension( 'UniversalLanguageSelector' );

# cldr
wfLoadExtension( 'cldr' );

# Federated Properties
$wgWBRepoSettings['federatedPropertiesEnabled'] = true;
$wgWBRepoSettings['federatedPropertiesSourceScriptUrl'] = "{{ SOURCE_REPO_SCHEME }}://{{ SOURCE_REPO_HOST }}/w/";

$wgWBRepoSettings['entitySources'] = [
	'local' => [
		'entityNamespaces' => [ 'item' => 120 ],
		'repoDatabase' => false,
		'baseUri' => 'http://{{ SERVER_NAME }}/entity/',
		'interwikiPrefix' => '',
		'rdfNodeNamespacePrefix' => 'wd',
		'rdfPredicateNamespacePrefix' => 'wdt',
	],
	'fedprops' => [
		'entityNamespaces' => [ 'property' => 120 ],
		'repoDatabase' => false,
		'baseUri' => 'http://{{ SOURCE_REPO_HOST }}/entity/',
		'interwikiPrefix' => 'wd',
		'rdfNodeNamespacePrefix' => 'fpwd',
		'rdfPredicateNamespacePrefix' => 'fpwd',
	],
];


# simulate source API errors via request header
if( isset ( $_SERVER['HTTP_X_FEDPROPS_SOURCEAPIRESPONSE'] ) ) {
   $wgParserCacheType = CACHE_NONE;
   $code = $_SERVER['HTTP_X_FEDPROPS_SOURCEAPIRESPONSE'];

   if( $code == 404 ) {
      $wgWBRepoSettings['federatedPropertiesSourceScriptUrl'] = 'http://notFound.404';
   }
}
